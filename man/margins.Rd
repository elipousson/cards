% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margins.R
\name{margins}
\alias{margins}
\alias{is_margin}
\alias{margin}
\alias{get_margin}
\title{Specify the margins of a page or element}
\source{
ggplot2 package
}
\usage{
margins(margin = NULL, ..., unit = "in")

is_margin(x)

margin(t = 0, r = 0, b = 0, l = 0, unit = "pt")

get_margin(margin = NULL, ..., unit = "in")
}
\arguments{
\item{margin}{A numeric list or vector or a margin class object. For
\code{\link[=get_margin]{get_margin()}} only, margin can be a margin name from \code{page_extras$margins}.
Defaults to \code{NULL}.}

\item{...}{Additional numeric values combined with margin if provided.}

\item{unit}{Default units for margins (ignored if margin is a margin class
object). Passed to as_unit_type() so units class objects as well as unit
names supported \code{\link[grid:unit]{grid::unit()}} are allowed. Defaults to "in".}

\item{x}{Object to check for class margin and unit}
}
\description{
An extended version of \code{\link[ggplot2:element]{ggplot2::margin()}} with more flexibility in
specification. If margin is a margin class object it is returned as is. If
margin is length 1, the t, r, b, and l values are all set to that value. If
margin is length 2, the t and b are set to half the first value and the r and
l are set to half the second value. The ... parameters also allow you to use
the same syntax as margin.
}
\examples{

margins(1, unit = "in")

margins(c(2, 2), unit = "in")

margins(list(1, 1, 1.5, 1), unit = "cm")

margins(t = 1, r = 3, b = 1.5, l = 3, unit = "in")

standard_margin <- get_margin("standard", unit = "in")

is_margin(standard_margin)

standard_margin

}
