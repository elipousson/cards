[{"path":"https://elipousson.github.io/papersize/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Eli Pousson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/papersize/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/papersize/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2023). papersize: Sizing Plots Files Paper. https://github.com/elipousson/papersize, https://elipousson.github.io/papersize/.","code":"@Manual{,   title = {papersize: Sizing Plots and Files for Paper},   author = {Eli Pousson},   year = {2023},   note = {https://github.com/elipousson/papersize, https://elipousson.github.io/papersize/}, }"},{"path":"https://elipousson.github.io/papersize/index.html","id":"papersize","dir":"","previous_headings":"","what":"Sizing Plots and Files for Paper","title":"Sizing Plots and Files for Paper","text":"goal papersize provide convenience functions extending grid, ggplot2, patchwork help sizing plots files printing paper, postcards, playing cards, physical media.","code":""},{"path":"https://elipousson.github.io/papersize/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sizing Plots and Files for Paper","text":"can install development version papersize like :","code":"# pak::pkg_install(\"elipousson/papersize\")"},{"path":"https://elipousson.github.io/papersize/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Sizing Plots and Files for Paper","text":"papersize includes data standard paper sizes including sizes papers (ANSI, ISO, standards), photo prints, postcards, playing cards. papersize includes plotting functions create lists ggplot2 plots repeated elements can assembled patchwork page layouts print. example, plot_cards() creates list Poker-card sized plots can tiled onto letter-size patchwork save print.   papersize currently limited features additional features expected include better support multi-page layouts, control position card elements, preset card formats/designs, appropriate handling cut-lines DIY card printing.","code":"library(papersize) get_paper(\"Letter\") #> # A tibble: 1 × 9 #>   name      series size   standard units width height orientation type  #>   <list>    <chr>  <list> <chr>    <chr> <dbl>  <dbl> <chr>       <chr> #> 1 <chr [1]> <NA>   <NULL> ANSI     in      8.5     11 portrait    paper  get_paper(\"Letter\", orientation = \"landscape\") #> # A tibble: 1 × 9 #>   name      series size   standard units width height orientation type  #>   <list>    <chr>  <list> <chr>    <chr> <dbl>  <dbl> <chr>       <chr> #> 1 <chr [1]> <NA>   <NULL> ANSI     in       11    8.5 landscape   paper  get_card(\"Poker\") #> # A tibble: 1 × 9 #>   name      series size   standard units width height orientation type  #>   <list>    <chr>  <list> <chr>    <chr> <dbl>  <dbl> <chr>       <chr> #> 1 <chr [1]> <NA>   <NULL> <NA>     in      2.5    3.5 portrait    card papersize <-   plot_cards(     \"Poker\",     n = 8,     number = TRUE,     border = TRUE,     size = 4,     linewidth = 0.5,     text = rep(c(\"\\U2664\", \"\\U2661\", \"\\U2662\", \"\\U2667\"), 2),     color = \"yellow\"   )  papersize[[1]] page_layout(   plots = papersize,   page = \"Letter\",   orientation = \"landscape\" ) #> $`1`"},{"path":"https://elipousson.github.io/papersize/reference/area_unit_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Area units (vector) — area_unit_options","title":"Area units (vector) — area_unit_options","text":"vector supported area units derived dist_units units::valid_udunits().","code":""},{"path":"https://elipousson.github.io/papersize/reference/area_unit_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area units (vector) — area_unit_options","text":"","code":"area_unit_options"},{"path":"https://elipousson.github.io/papersize/reference/area_unit_options.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Area units (vector) — area_unit_options","text":"character vector 41 names, plural names, aliases area units.","code":""},{"path":"https://elipousson.github.io/papersize/reference/as_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for grid units — as_unit","title":"Helper functions for grid units — as_unit","text":"as_unit(): Convert unit (allowing unit objects units) as_unit_type(): Convert unit type (checking unit types) convert_unit_type(): Convert x one unit type another (preserving names named vectors) is_same_unit_type(): x y unit type?","code":""},{"path":"https://elipousson.github.io/papersize/reference/as_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for grid units — as_unit","text":"","code":"as_unit(   x,   units = NULL,   data = NULL,   recurse = FALSE,   arg = caller_arg(x),   call = parent.frame() )  as_unit_type(x, recurse = FALSE, arg = caller_arg(x), call = parent.frame())  convert_unit_type(   x,   from = NULL,   to = NULL,   typeFrom = \"dimension\",   valueOnly = FALSE,   ... )  is_same_unit_type(x, y, recurse = FALSE)"},{"path":"https://elipousson.github.io/papersize/reference/as_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for grid units — as_unit","text":"x numeric vector. units character vector specifying units     corresponding numeric values. data argument used supply extra information     special unit types. recurse Whether recurse complex units. arg Passed cli_abort() improve internal error messages. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages. Unit convert . NULL x units object, convert units warning. Unit convert . Passed unitTo parameter grid::convertUnit(). NULL, return x . typeFrom Passed typeFrom parameter grid::convertUnit(). Defaults \"dimension\". valueOnly Passed valueOnly parameter grid::convertUnit(). Defaults FALSE. ... Arguments passed grid::convertUnit axisFrom Either \"x\" \"y\" indicate     whether unit object represents value x-     y-direction. axisTo axisFrom, applies unit object     created. typeTo typeFrom, applies unit object     created. y Object compare x.","code":""},{"path":"https://elipousson.github.io/papersize/reference/as_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper functions for grid units — as_unit","text":"","code":"inch <- as_unit(1, \"in\")  inch #> [1] 1inches  as_unit(10, inch) #> [1] 10inches  as_unit(inch, \"cm\") #> [1] 1cm  as_unit(inch) #> [1] 1inches  convert_unit_type(inch, to = \"cm\") #> [1] 2.54cm  convert_unit_type(c(10, 100), from = \"mm\", to = \"cm\") #> [1] 1cm  10cm  is_same_unit_type(inch, \"in\") #> [1] TRUE  is_same_unit_type(\"pt\", \"points\") #> [1] TRUE"},{"path":"https://elipousson.github.io/papersize/reference/card_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard card sizes — card_sizes","title":"Standard card sizes — card_sizes","text":"Reference table common playing card sizes get_card(). Data subset paper_sizes data included sfext package.","code":""},{"path":"https://elipousson.github.io/papersize/reference/card_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard card sizes — card_sizes","text":"","code":"card_sizes"},{"path":"https://elipousson.github.io/papersize/reference/card_sizes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard card sizes — card_sizes","text":"data frame 5 rows 6 variables: name Name card units Units (\"\" \"mm\") dimensions width Width units height Height units orientation Portrait (width less height), landscape, square","code":""},{"path":"https://elipousson.github.io/papersize/reference/convert_dist_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert distance from scale to actual units — convert_dist_scale","title":"Convert distance from scale to actual units — convert_dist_scale","text":"function converts scale distances actual units based named standard_scales.","code":""},{"path":"https://elipousson.github.io/papersize/reference/convert_dist_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert distance from scale to actual units — convert_dist_scale","text":"","code":"convert_dist_scale(   dist = NULL,   scale = NULL,   standard = NULL,   series = NULL,   scale_unit = \"in\",   scale_factor = NULL,   actual_unit = NULL,   dpi = 120,   paper = NULL,   orientation = NULL,   ... )"},{"path":"https://elipousson.github.io/papersize/reference/convert_dist_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert distance from scale to actual units — convert_dist_scale","text":"dist distance convert. paper provided, dist optional paper width height used dist. scale Scale name standard_scales[[\"scale\"]]. standard Scale standard. Options include \"USGS\", \"Engineering\", \"Architectural\". series Map series standard_scales[[\"series\"]]. Series available USGS scales. scale_unit \"mm\" (converted cm dividing 10), \"cm\", \"px\" (converted inches dividing dpi), \"\". scale_factor factor converting scale_unit actual_unit, e.g. 1\" = 1', scale factor 12. optional scale provided; defaults NULL. actual_unit unit supported convert_dist_units() dpi dots per square inch (used conversion factor \"px\" \"\") paper Name paper passed get_paper() orientation Page orientation, Default: NULL ... Arguments passed get_paper name Page name, e.g. \"letter\", case sensitive, Default: NULL width Page width \"\", \"px\" \"mm\" units. Default: NULL height Page height \"\", \"px\" \"mm\" units. Default: NULL","code":""},{"path":"https://elipousson.github.io/papersize/reference/convert_dist_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert distance from scale to actual units — convert_dist_scale","text":"paper provided, return vector dist values converted scale_unit actual_unit based scale_factor information standard_scales data. paper provided, return data.frame converted distances appends columns named actual_width actual_height.","code":""},{"path":[]},{"path":"https://elipousson.github.io/papersize/reference/convert_dist_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert distance (and area) values between different units — convert_dist_units","title":"Convert distance (and area) values between different units — convert_dist_units","text":"Convert distance (area) values different units","code":""},{"path":"https://elipousson.github.io/papersize/reference/convert_dist_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert distance (and area) values between different units — convert_dist_units","text":"","code":"convert_dist_units(   dist,   from = NULL,   to = \"meter\",   drop = FALSE,   digits = NULL )"},{"path":"https://elipousson.github.io/papersize/reference/convert_dist_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert distance (and area) values between different units — convert_dist_units","text":"dist Numeric units object Existing unit dist, Default: NULL. dist units object, numerator used \"\" Unit convert distance , Default: 'meter' drop TRUE, return numeric. FALSE, return class units object. digits Number digits include result; defaults NULL.","code":""},{"path":"https://elipousson.github.io/papersize/reference/convert_dist_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert distance (and area) values between different units — convert_dist_units","text":"Object created units::set_units()","code":""},{"path":[]},{"path":"https://elipousson.github.io/papersize/reference/dist_unit_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance units (vector) — dist_unit_options","title":"Distance units (vector) — dist_unit_options","text":"vector supported distance units pulled dist_units.","code":""},{"path":"https://elipousson.github.io/papersize/reference/dist_unit_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance units (vector) — dist_unit_options","text":"","code":"dist_unit_options"},{"path":"https://elipousson.github.io/papersize/reference/dist_unit_options.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Distance units (vector) — dist_unit_options","text":"character vector 86 names, plural names, aliases, symbols distance units.","code":""},{"path":"https://elipousson.github.io/papersize/reference/dist_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance units (data frame) — dist_units","title":"Distance units (data frame) — dist_units","text":"subset units supported units package accessible units::valid_udunits() function.","code":""},{"path":"https://elipousson.github.io/papersize/reference/dist_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance units (data frame) — dist_units","text":"","code":"dist_units"},{"path":"https://elipousson.github.io/papersize/reference/dist_units.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Distance units (data frame) — dist_units","text":"data frame 33 rows 12 variables: symbol symbols symbol_aliases symbol aliases name_singular singular names name_singular_aliases singular name aliases name_plural character plural names name_plural_aliases plural name aliases def short definition definition definition comment comment dimensionless logical indicator dimensionless units source_xml source XML unit_opts character vector symbols, singular, plural names unit","code":""},{"path":"https://elipousson.github.io/papersize/reference/get_page_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a paper or card size based on name, dimensions, orientation, or type — get_page_size","title":"Get a paper or card size based on name, dimensions, orientation, or type — get_page_size","text":"get_page_size() filters paper_sizes one variables option reorient page dimensions convert page units. get_paper() equivalent get_page_size() without option set units, type, reorient parameters. get_card() equivalent get_paper() type = \"card\" string \"card\" attached end provided name value supporting \"Poker card\" \"Poker\" valid name. get_page_dims() returns width height single page. convert_page_units() uses convert_unit_type() convert unit used page dimensions.","code":""},{"path":"https://elipousson.github.io/papersize/reference/get_page_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a paper or card size based on name, dimensions, orientation, or type — get_page_size","text":"","code":"get_page_size(   name = NULL,   width = NULL,   height = NULL,   orientation = NULL,   reorient = TRUE,   units = NULL,   type = NULL,   ignore.case = TRUE )  get_paper(name = NULL, width = NULL, height = NULL, orientation = NULL)  get_card(name = NULL, width = NULL, height = NULL, orientation = NULL)  get_page_dims(   page = NULL,   width = NULL,   height = NULL,   orientation = NULL,   cols = c(\"width\", \"height\"),   arg = caller_arg(page),   call = parent.frame(),   ... )  convert_page_units(page, units = NULL, cols = c(\"width\", \"height\"))"},{"path":"https://elipousson.github.io/papersize/reference/get_page_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a paper or card size based on name, dimensions, orientation, or type — get_page_size","text":"name Page name, e.g. \"letter\", case sensitive, Default: NULL width Page width \"\", \"px\" \"mm\" units. Default: NULL height Page height \"\", \"px\" \"mm\" units. Default: NULL orientation Page orientation, Default: NULL reorient TRUE orientation NULL, flip width height dimensions pages match provided orientation. Set reorient = FALSE filter pages orientation. units Units convert page dimensions using convert_unit_type(). type Page type, Options include \"paper\", \"social\", \"postcard\", \"print\", \"card\", \"screen\". Default: NULL ignore.case FALSE, filtering page type case sensitive. Defaults TRUE. page Used get_page_dims(), page either character vector passed name parameter get_page_size(), data.frame column names matching cols parameter, length 2 numeric vector page width height. cols Length 2 character vector column names page dimensions. Defaults c(\"width\", \"height\"). arg, call Passed cli_abort() improve internal error messages. ... Additional parameters passed get_page_dims() get_page_size() page character object.","code":""},{"path":"https://elipousson.github.io/papersize/reference/get_page_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a paper or card size based on name, dimensions, orientation, or type — get_page_size","text":"data.frame page, paper, card name dimensions.","code":""},{"path":"https://elipousson.github.io/papersize/reference/get_page_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a paper or card size based on name, dimensions, orientation, or type — get_page_size","text":"","code":"get_paper(\"letter\") #> # A tibble: 1 × 10 #>   name      series size   standard units width height orientation type    asp #>   <list>    <chr>  <list> <chr>    <chr> <dbl>  <dbl> <chr>       <chr> <dbl> #> 1 <chr [1]> NA     <NULL> ANSI     in      8.5     11 portrait    paper 0.773  get_paper(\"letter\", orientation = \"landscape\") #> # A tibble: 1 × 10 #>   name      series size   standard units width height orientation type    asp #>   <list>    <chr>  <list> <chr>    <chr> <dbl>  <dbl> <chr>       <chr> <dbl> #> 1 <chr [1]> NA     <NULL> ANSI     in       11    8.5 landscape   paper  1.29  get_page_size(orientation = \"square\", reorient = FALSE) #> # A tibble: 4 × 10 #>   name      series size      standard    units  width height orien…¹ type    asp #>   <list>    <chr>  <list>    <chr>       <chr>  <dbl>  <dbl> <chr>   <chr> <dbl> #> 1 <chr [1]> NA     <NULL>    British Im… in      10     10   square  paper     1 #> 2 <chr [1]> NA     <chr [1]> Instagram   px    1080   1080   square  soci…     1 #> 3 <chr [1]> C      <dbl [1]> ISO         mm      28     28   square  paper     1 #> 4 <chr [1]> NA     <NULL>    NA          in       2.5    2.5 square  card      1 #> # … with abbreviated variable name ¹​orientation  get_page_size(\"ledger\", units = \"cm\") #> # A tibble: 1 × 10 #>   name      series size   standard units width height orientation type    asp #>   <list>    <chr>  <list> <chr>    <chr> <dbl>  <dbl> <chr>       <chr> <dbl> #> 1 <chr [1]> NA     <NULL> ANSI     cm     27.9   43.2 portrait    paper 0.647  get_card(\"Tarot\") #> # A tibble: 1 × 10 #>   name      series size   standard units width height orientation type    asp #>   <list>    <chr>  <list> <chr>    <chr> <dbl>  <dbl> <chr>       <chr> <dbl> #> 1 <chr [1]> NA     <NULL> NA       in     2.75   4.75 portrait    card  0.579"},{"path":"https://elipousson.github.io/papersize/reference/get_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standard scales and convert to scale distances — get_scale","title":"Get standard scales and convert to scale distances — get_scale","text":"function returns scale standard_scales based provided name, standard, /series.","code":""},{"path":"https://elipousson.github.io/papersize/reference/get_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standard scales and convert to scale distances — get_scale","text":"","code":"get_scale(scale = NULL, standard = NULL, series = NULL)"},{"path":"https://elipousson.github.io/papersize/reference/get_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standard scales and convert to scale distances — get_scale","text":"scale Scale name standard_scales[[\"scale\"]]. standard Scale standard. Options include \"USGS\", \"Engineering\", \"Architectural\". series Map series standard_scales[[\"series\"]]. Series available USGS scales.","code":""},{"path":"https://elipousson.github.io/papersize/reference/get_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standard scales and convert to scale distances — get_scale","text":"tibble based standard_scales rows filtered values match parameters.","code":""},{"path":"https://elipousson.github.io/papersize/reference/is_dist_units.html","id":null,"dir":"Reference","previous_headings":"","what":"General utility functions for working with distance units objects — is_same_units","title":"General utility functions for working with distance units objects — is_same_units","text":"is_dist_units(): x distance unit object? is_same_units(): x y character strings represent get_dist_units(): Get distance units x (x sf units objects character string dist_unit_options) as_dist_units(): Convert x units using units::as_units","code":""},{"path":"https://elipousson.github.io/papersize/reference/is_dist_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General utility functions for working with distance units objects — is_same_units","text":"","code":"is_same_units(x, y = NULL)  is_dist_units(x)  get_dist_units(x, multiple = TRUE, quiet = FALSE)"},{"path":"https://elipousson.github.io/papersize/reference/is_dist_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General utility functions for working with distance units objects — is_same_units","text":"x, y objects check multiple TRUE x character vector distance/area units, get_dist_units() may return multiple units. Passed rlang::arg_match. quiet TRUE, suppress warning messages. null.ok null.ok TRUE, allow x return NULL value; FALSE, error NULL values.","code":""},{"path":[]},{"path":"https://elipousson.github.io/papersize/reference/make_page_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a page size data frame — make_page_size","title":"Make a page size data frame — make_page_size","text":"Width height aspect ratio either width height required. Units also required. orientation provided, width height may reversed match provided orientation.","code":""},{"path":"https://elipousson.github.io/papersize/reference/make_page_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a page size data frame — make_page_size","text":"","code":"make_page_size(   width = NULL,   height = NULL,   units,   asp = NULL,   orientation = NULL,   name = NULL,   cols = c(\"width\", \"height\"),   ... )"},{"path":"https://elipousson.github.io/papersize/reference/make_page_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a page size data frame — make_page_size","text":"width, height Page width height. required, asp NULL. Default NULL. units Units width height. Required. Passed as_unit_type() validate. asp Aspect ratio. Required one width height provided. name Optional name paper size. Recommend avoiding duplication existing names paper_sizes. cols Column nmaes ot use width height columns.","code":""},{"path":[]},{"path":"https://elipousson.github.io/papersize/reference/make_page_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a page size data frame — make_page_size","text":"","code":"make_page_size(48, 24, \"in\", name = \"Tabletop map\") #>           name width height  units orientation asp #> 1 Tabletop map    48     24 inches   landscape   2  make_page_size(8.5, 8.5, \"in\", name = \"Trimmed letter\") #>             name width height  units orientation asp #> 1 Trimmed letter   8.5    8.5 inches      square   1"},{"path":"https://elipousson.github.io/papersize/reference/page_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Use patchwork to lay out a list of fixed aspect plots on a larger page — page_layout","title":"Use patchwork to lay out a list of fixed aspect plots on a larger page — page_layout","text":"Use patchwork lay list fixed aspect plots larger page","code":""},{"path":"https://elipousson.github.io/papersize/reference/page_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use patchwork to lay out a list of fixed aspect plots on a larger page — page_layout","text":"","code":"page_layout(   plots = NULL,   page = NULL,   width = NULL,   height = NULL,   orientation = \"landscape\",   byrow = FALSE,   guides = NULL,   tag_level = NULL,   design = NULL,   paginate = TRUE,   dims = NULL,   ... )"},{"path":"https://elipousson.github.io/papersize/reference/page_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use patchwork to lay out a list of fixed aspect plots on a larger page — page_layout","text":"plots Page name, data.frame width height columns, list ggplot2 objects card plots. Default: NULL page Paper name data.frame width height columns. Optional width height provided, Default: NULL width, height Paper width height, Default: NULL orientation Paper orientation, Optional width height provided, Default: 'landscape' byrow Analogous byrow matrix(). FALSE plots filled column-major order guides string specifying guides treated layout. 'collect' collect guides given nesting level, removing duplicates. 'keep' stop collection level let guides placed alongside plot. auto allow guides collected upper level tries, place alongside plot .  modify default guide \"position\" theme(legend.position=...) also collecting guides must apply change overall patchwork (see example). tag_level string ('keep' 'new') indicate auto-tagging behave. See plot_annotation(). design Specification location areas layout. Can either specified text string concatenating calls area() together. See examples information use. ... Additional parameters passed get_paper_size() dims character object.","code":""},{"path":"https://elipousson.github.io/papersize/reference/page_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use patchwork to lay out a list of fixed aspect plots on a larger page — page_layout","text":"patchwork object","code":""},{"path":[]},{"path":"https://elipousson.github.io/papersize/reference/page_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use patchwork to lay out a list of fixed aspect plots on a larger page — page_layout","text":"","code":"page_layout(   plots = plot_cards(\"Poker\", 6),   page = \"letter\" ) #> $`1`  #>"},{"path":"https://elipousson.github.io/papersize/reference/paper_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard paper and image sizes — paper_sizes","title":"Standard paper and image sizes — paper_sizes","text":"Reference table standard paper, postcard, photo print, social media image sizes, playing card sizes get_page_size(). Derived visioguy/PaperSizes repo, Adobe UK guide photo sizes sources. Data identical data included sfext package.","code":""},{"path":"https://elipousson.github.io/papersize/reference/paper_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard paper and image sizes — paper_sizes","text":"","code":"paper_sizes"},{"path":"https://elipousson.github.io/papersize/reference/paper_sizes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard paper and image sizes — paper_sizes","text":"data frame 123 rows 9 variables: name Name paper series Series standard Standard size Size series units Units (\"\", \"mm\", \"px\") dimensions width Width units height Height units orientation Portrait (width less height), landscape, square type Type (paper, postcard, print, social)","code":""},{"path":"https://elipousson.github.io/papersize/reference/papersize-package.html","id":null,"dir":"Reference","previous_headings":"","what":"papersize: Sizing Plots and Files for Paper — papersize-package","title":"papersize: Sizing Plots and Files for Paper — papersize-package","text":"set convenience functions extending grid, ggplot2, patchwork help size plots files printing paper, postcards, playing cards, physical media.","code":""},{"path":[]},{"path":"https://elipousson.github.io/papersize/reference/papersize-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"papersize: Sizing Plots and Files for Paper — papersize-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/papersize/reference/plot_cards.html","id":null,"dir":"Reference","previous_headings":"","what":"Use ggplot to plot for one or more cards — plot_cards","title":"Use ggplot to plot for one or more cards — plot_cards","text":"Make plot cards.","code":""},{"path":"https://elipousson.github.io/papersize/reference/plot_cards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use ggplot to plot for one or more cards — plot_cards","text":"","code":"plot_cards(   card,   n = 1,   orientation = \"portrait\",   number = FALSE,   color = \"white\",   size = 5,   family = NULL,   fill = \"gray20\",   border = FALSE,   inset = unit(c(5, 5), \"mm\"),   linetype = \"dashed\",   linewidth = 1,   text = NULL,   center = NULL )"},{"path":"https://elipousson.github.io/papersize/reference/plot_cards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use ggplot to plot for one or more cards — plot_cards","text":"card Card name data.frame width height columns. n Number cards plot, Default: 1 orientation Card orientation, Default: 'portrait' number TRUE, add number card, Default: FALSE color Color number, text, border, Default: 'white' size Font size number text, Default: 5 family Font family number text, Default: 'Georgia' fill Length 1 2 character vector color name. length 2, first value assumed card fill second value assumed inset border fill. Default: 'gray20' border TRUE, add border card. Default: FALSE inset Unit numeric vector inset distance card border, Default: unit(c(5, 5), \"mm\"). inset numeric vector, expected percent relative card width height. linetype linetype card border, Default: 'dashed' linewidth linewidth card border, Default: 2 text Character vector card text, Default: NULL center Position card center, Default: c(0, 0)","code":""},{"path":"https://elipousson.github.io/papersize/reference/plot_cards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use ggplot to plot for one or more cards — plot_cards","text":"list plot objects item list card.","code":""},{"path":"https://elipousson.github.io/papersize/reference/plot_cards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use ggplot to plot for one or more cards — plot_cards","text":"","code":"plot_cards(\"Tarot\", n = 2, number = TRUE)[[2]]   plot_cards(\"Poker\", n = 1, number = TRUE, text = \"♡️\") #> [[1]]  #>"},{"path":"https://elipousson.github.io/papersize/reference/standard_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard map, architectural, and engineering scales — standard_scales","title":"Standard map, architectural, and engineering scales — standard_scales","text":"Standard map scales derived USGS 2002 report map scales https://pubs.usgs.gov/fs/2002/0015/report.pdf","code":""},{"path":"https://elipousson.github.io/papersize/reference/standard_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard map, architectural, and engineering scales — standard_scales","text":"","code":"standard_scales"},{"path":"https://elipousson.github.io/papersize/reference/standard_scales.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard map, architectural, and engineering scales — standard_scales","text":"data frame 36 rows 16 variables: scale Scale name standard Standard (USGS, architectural, engineering) series Series name (USGS map scales ) actual_ft Scale distance 1 ft actual. actual_ft_unit Unit scale 1 ft actual. scale_in Actual distance 1 scale. scale_in_unit Unit actual distance 1 scale. scale_in_accuracy Accuracy 1 scale (approximate exact) scale_cm Actual distance 1 cm scale. scale_cm_unit Unit actual distance 1 cm scale. scale_cm_accuracy Accuracy 1 cm scale (approximate exact) size_latlon Standard size latitude/longitude size_latlon_unit Unit latitude/longitude size (minutes degrees) area_approx Approximate actual area area_approx_unit Approximate area unit series_status Series status (select USGS map series \"abandoned\")","code":""},{"path":"https://elipousson.github.io/papersize/reference/standard_scales.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard map, architectural, and engineering scales — standard_scales","text":"Common architectural engineering scales derived FEMA guide using scales https://www.usfa.fema.gov/downloads/pdf/nfa/engineer-architect-scales.pdf","code":""},{"path":"https://elipousson.github.io/papersize/news/index.html","id":"papersize-0109000-2023-01-06","dir":"Changelog","previous_headings":"","what":"papersize 0.1.0.9000 (2023-01-06)","title":"papersize 0.1.0.9000 (2023-01-06)","text":"feat: add make_page_size function refactor: update set_page_orientation add orientation col provided docs: fill missing parameter definitions feat: add asp column pages + set_asp_col() helper refactor: add cols arg flexibility naming paper data.frames refactor: replace page_filter w/ general filter_col helper refactor(plot_cards): drop center arg helper functions w/ assumption x y columns added card refactor(get_page): improve handling orientation w/ new reorient parameter feat(get_page_dims): export new function retrieving page dimensions feat(convert_page_units): export new function converting page units (also add units parameter get_page)","code":""}]
